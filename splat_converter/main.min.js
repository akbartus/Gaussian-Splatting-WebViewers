let cameras=[{id:0,img_name:"00001",width:1959,height:1090,position:[-3.0089893469241797,-.11086489695181866,-3.7527640949141428],rotation:[[.876134201218856,.06925962026449776,.47706599800804744],[-.04747421839895102,.9972110940209488,-.057586739349882114],[-.4797239414934443,.027805376500959853,.8769787916452908]],fy:1164.6601287484507,fx:1159.5880733038064}];const camera=cameras[0];let fileName;function getProjectionMatrix(e,t,n,r){const a=200;return[[2*e/n,0,0,0],[0,-2*t/r,0,0],[0,0,a/199.8,1],[0,0,-40/199.8,0]].flat()}function getViewMatrix(e){const t=e.rotation.flat(),n=e.position;return[[t[0],t[1],t[2],0],[t[3],t[4],t[5],0],[t[6],t[7],t[8],0],[-n[0]*t[0]-n[1]*t[3]-n[2]*t[6],-n[0]*t[1]-n[1]*t[4]-n[2]*t[7],-n[0]*t[2]-n[1]*t[5]-n[2]*t[8],1]].flat()}function multiply4(e,t){return[t[0]*e[0]+t[1]*e[4]+t[2]*e[8]+t[3]*e[12],t[0]*e[1]+t[1]*e[5]+t[2]*e[9]+t[3]*e[13],t[0]*e[2]+t[1]*e[6]+t[2]*e[10]+t[3]*e[14],t[0]*e[3]+t[1]*e[7]+t[2]*e[11]+t[3]*e[15],t[4]*e[0]+t[5]*e[4]+t[6]*e[8]+t[7]*e[12],t[4]*e[1]+t[5]*e[5]+t[6]*e[9]+t[7]*e[13],t[4]*e[2]+t[5]*e[6]+t[6]*e[10]+t[7]*e[14],t[4]*e[3]+t[5]*e[7]+t[6]*e[11]+t[7]*e[15],t[8]*e[0]+t[9]*e[4]+t[10]*e[8]+t[11]*e[12],t[8]*e[1]+t[9]*e[5]+t[10]*e[9]+t[11]*e[13],t[8]*e[2]+t[9]*e[6]+t[10]*e[10]+t[11]*e[14],t[8]*e[3]+t[9]*e[7]+t[10]*e[11]+t[11]*e[15],t[12]*e[0]+t[13]*e[4]+t[14]*e[8]+t[15]*e[12],t[12]*e[1]+t[13]*e[5]+t[14]*e[9]+t[15]*e[13],t[12]*e[2]+t[13]*e[6]+t[14]*e[10]+t[15]*e[14],t[12]*e[3]+t[13]*e[7]+t[14]*e[11]+t[15]*e[15]]}function invert4(e){let t=e[0]*e[5]-e[1]*e[4],n=e[0]*e[6]-e[2]*e[4],r=e[0]*e[7]-e[3]*e[4],a=e[1]*e[6]-e[2]*e[5],o=e[1]*e[7]-e[3]*e[5],i=e[2]*e[7]-e[3]*e[6],c=e[8]*e[13]-e[9]*e[12],l=e[8]*e[14]-e[10]*e[12],s=e[8]*e[15]-e[11]*e[12],d=e[9]*e[14]-e[10]*e[13],f=e[9]*e[15]-e[11]*e[13],u=e[10]*e[15]-e[11]*e[14],v=t*u-n*f+r*d+a*s-o*l+i*c;return v?[(e[5]*u-e[6]*f+e[7]*d)/v,(e[2]*f-e[1]*u-e[3]*d)/v,(e[13]*i-e[14]*o+e[15]*a)/v,(e[10]*o-e[9]*i-e[11]*a)/v,(e[6]*s-e[4]*u-e[7]*l)/v,(e[0]*u-e[2]*s+e[3]*l)/v,(e[14]*r-e[12]*i-e[15]*n)/v,(e[8]*i-e[10]*r+e[11]*n)/v,(e[4]*f-e[5]*s+e[7]*c)/v,(e[1]*s-e[0]*f-e[3]*c)/v,(e[12]*o-e[13]*r+e[15]*t)/v,(e[9]*r-e[8]*o-e[11]*t)/v,(e[5]*l-e[4]*d-e[6]*c)/v,(e[0]*d-e[1]*l+e[2]*c)/v,(e[13]*n-e[12]*a-e[14]*t)/v,(e[8]*a-e[9]*n+e[10]*t)/v]:null}function translate4(e,t,n,r){return[...e.slice(0,12),e[0]*t+e[4]*n+e[8]*r+e[12],e[1]*t+e[5]*n+e[9]*r+e[13],e[2]*t+e[6]*n+e[10]*r+e[14],e[3]*t+e[7]*n+e[11]*r+e[15]]}function createWorker(e,t){let n,r,a=t,o=0;let i=[],c=new Uint32Array;const l=t=>{if(!n)return;const r=new Float32Array(n),a=new Uint8Array(n),l=new Float32Array(3*o),s=new Float32Array(3*o),d=new Float32Array(3*o),f=new Float32Array(4*o);if(c.length==o){let e=i[2]*t[2]+i[6]*t[6]+i[10]*t[10];if(Math.abs(e-1)<.01)return}let u=-1/0,v=1/0,m=new Int32Array(o);for(let e=0;e<o;e++){let n=4096*(t[2]*r[8*e+0]+t[6]*r[8*e+1]+t[10]*r[8*e+2])|0;m[e]=n,n>u&&(u=n),n<v&&(v=n)}let p=65536/(u-v),y=new Uint32Array(65536);for(let e=0;e<o;e++)m[e]=(m[e]-v)*p|0,y[m[e]]++;let A=new Uint32Array(65536);for(let e=1;e<65536;e++)A[e]=A[e-1]+y[e-1];c=new Uint32Array(o);for(let e=0;e<o;e++)c[A[m[e]]++]=e;i=t;for(let e=0;e<o;e++){const t=c[e];d[3*e+0]=r[8*t+0],d[3*e+1]=r[8*t+1],d[3*e+2]=r[8*t+2],f[4*e+0]=a[32*t+24+0]/255,f[4*e+1]=a[32*t+24+1]/255,f[4*e+2]=a[32*t+24+2]/255,f[4*e+3]=a[32*t+24+3]/255;let n=[r[8*t+3+0],r[8*t+3+1],r[8*t+3+2]],o=[(a[32*t+28+0]-128)/128,(a[32*t+28+1]-128)/128,(a[32*t+28+2]-128)/128,(a[32*t+28+3]-128)/128];const i=[1-2*(o[2]*o[2]+o[3]*o[3]),2*(o[1]*o[2]+o[0]*o[3]),2*(o[1]*o[3]-o[0]*o[2]),2*(o[1]*o[2]-o[0]*o[3]),1-2*(o[1]*o[1]+o[3]*o[3]),2*(o[2]*o[3]+o[0]*o[1]),2*(o[1]*o[3]+o[0]*o[2]),2*(o[2]*o[3]-o[0]*o[1]),1-2*(o[1]*o[1]+o[2]*o[2])],u=[n[0]*i[0],n[0]*i[1],n[0]*i[2],n[1]*i[3],n[1]*i[4],n[1]*i[5],n[2]*i[6],n[2]*i[7],n[2]*i[8]];l[3*e+0]=u[0]*u[0]+u[3]*u[3]+u[6]*u[6],l[3*e+1]=u[0]*u[1]+u[3]*u[4]+u[6]*u[7],l[3*e+2]=u[0]*u[2]+u[3]*u[5]+u[6]*u[8],s[3*e+0]=u[1]*u[1]+u[4]*u[4]+u[7]*u[7],s[3*e+1]=u[1]*u[2]+u[4]*u[5]+u[7]*u[8],s[3*e+2]=u[2]*u[2]+u[5]*u[5]+u[8]*u[8]}e.postMessage({covA:l,center:d,color:f,covB:s,viewProj:t},[l.buffer,d.buffer,f.buffer,s.buffer])};const s=()=>{if(!d){d=!0;let e=r;l(e),setTimeout((()=>{d=!1,e!==r&&s()}),0)}};let d;e.onmessage=e=>{e.data.ply?(o=0,l(r),n=function(e,t){const n=new Uint8Array(e),r=(new TextDecoder).decode(n.slice(0,10240)),a="end_header\n",o=r.indexOf(a);if(o<0)throw new Error("Unable to read .ply file header");const i=parseInt(/element vertex (\d+)\n/.exec(r)[1]/t);let c=0,l={},s={};const d={double:"getFloat64",int:"getInt32",uint:"getUint32",float:"getFloat32",short:"getInt16",ushort:"getUint16",uchar:"getUint8"};for(let e of r.slice(0,o).split("\n").filter((e=>e.startsWith("property ")))){const[t,n,r]=e.split(" "),a=d[n]||"getInt8";s[r]=a,l[r]=c,c+=parseInt(a.replace(/[^\d]/g,""))/8}let f=new DataView(e,o+a.length),u=0;const v=new Proxy({},{get(e,t){if(!s[t])throw new Error(t+" not found");return f[s[t]](u*c+l[t],!0)}});let m=new Float32Array(i),p=new Uint32Array(i);for(u=0;u<i;u++){if(p[u]=u,!s.scale_0)continue;const e=Math.exp(v.scale_0)*Math.exp(v.scale_1)*Math.exp(v.scale_2),t=1/(1+Math.exp(-v.opacity));m[u]=e*t}p.sort(((e,t)=>m[t]-m[e]));const y=new ArrayBuffer(32*i);for(let e=0;e<i;e++){u=p[e];const t=new Float32Array(y,32*e,3),n=new Float32Array(y,32*e+12,3),r=new Uint8ClampedArray(y,32*e+12+12,4),a=new Uint8ClampedArray(y,32*e+12+12+4,4);if(s.scale_0){const e=Math.sqrt(v.rot_0**2+v.rot_1**2+v.rot_2**2+v.rot_3**2);a[0]=v.rot_0/e*128+128,a[1]=v.rot_1/e*128+128,a[2]=v.rot_2/e*128+128,a[3]=v.rot_3/e*128+128,n[0]=Math.exp(v.scale_0),n[1]=Math.exp(v.scale_1),n[2]=Math.exp(v.scale_2)}else n[0]=.01,n[1]=.01,n[2]=.01,a[0]=255,a[1]=0,a[2]=0,a[3]=0;if(t[0]=v.x,t[1]=v.y,t[2]=v.z,s.f_dc_0){const e=.28209479177387814;r[0]=255*(.5+e*v.f_dc_0),r[1]=255*(.5+e*v.f_dc_1),r[2]=255*(.5+e*v.f_dc_2)}else r[0]=v.red,r[1]=v.green,r[2]=v.blue;s.opacity?r[3]=1/(1+Math.exp(-v.opacity))*255:r[3]=255}return y}(e.data.ply,a),o=Math.floor(n.byteLength/32),postMessage({buffer:n})):e.data.buffer?(n=e.data.buffer,o=e.data.vertexCount):e.data.vertexCount?o=e.data.vertexCount:e.data.view&&(r=e.data.view,s())}}const vertexShaderSource="\n  precision mediump float;\n  attribute vec2 position;\n\n  attribute vec4 color;\n  attribute vec3 center;\n  attribute vec3 covA;\n  attribute vec3 covB;\n\n  uniform mat4 projection, view;\n  uniform vec2 focal;\n  uniform vec2 viewport;\n\n  varying vec4 vColor;\n  varying vec2 vPosition;\n\n  mat3 transpose(mat3 m) {\n    return mat3(\n        m[0][0], m[1][0], m[2][0],\n        m[0][1], m[1][1], m[2][1],\n        m[0][2], m[1][2], m[2][2]\n    );\n  }\n\n  void main () {\n    vec4 camspace = view * vec4(center, 1);\n    vec4 pos2d = projection * camspace;\n\n    float bounds = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.x < -bounds || pos2d.x > bounds\n\t\t || pos2d.y < -bounds || pos2d.y > bounds) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    mat3 Vrk = mat3(\n        covA.x, covA.y, covA.z, \n        covA.y, covB.x, covB.y,\n        covA.z, covB.y, covB.z\n    );\n\t\n    mat3 J = mat3(\n        focal.x / camspace.z, 0., -(focal.x * camspace.x) / (camspace.z * camspace.z), \n        0., -focal.y / camspace.z, (focal.y * camspace.y) / (camspace.z * camspace.z), \n        0., 0., 0.\n    );\n\n    mat3 W = transpose(mat3(view));\n    mat3 T = W * J;\n    mat3 cov = transpose(T) * Vrk * T;\n    \n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n\n    float diagonal1 = cov[0][0] + 0.3;\n    float offDiagonal = cov[0][1];\n    float diagonal2 = cov[1][1] + 0.3;\n\n\tfloat mid = 0.5 * (diagonal1 + diagonal2);\n\tfloat radius = length(vec2((diagonal1 - diagonal2) / 2.0, offDiagonal));\n\tfloat lambda1 = mid + radius;\n\tfloat lambda2 = max(mid - radius, 0.1);\n\tvec2 diagonalVector = normalize(vec2(offDiagonal, lambda1 - diagonal1));\n\tvec2 v1 = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n\tvec2 v2 = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n\n    vColor = color;\n    vPosition = position;\n\n    gl_Position = vec4(\n        vCenter \n            + position.x * v1 / viewport * 2.0 \n            + position.y * v2 / viewport * 2.0, 0.0, 1.0);\n\n  }\n",fragmentShaderSource="\nprecision mediump float;\n\n  varying vec4 vColor;\n  varying vec2 vPosition;\n\n  void main () {    \n\t  float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    gl_FragColor = vec4(B * vColor.rgb, B);\n  }\n";let val,defaultViewMatrix=[.47,.04,.88,0,-.11,.99,.02,0,-.88,-.11,.47,0,.07,.03,6.55,1],viewMatrix=defaultViewMatrix,splatFile="test.splat";async function main(){new URLSearchParams(location.search);try{viewMatrix=JSON.parse(decodeURIComponent(location.hash.slice(1)))}catch(e){}const e=new URL(splatFile,location.href),t=await fetch(e,{mode:"cors",credentials:"omit"});if(200!=t.status)throw new Error(t.status+" Unable to load "+t.url);const n=t.body.getReader();let r=new Uint8Array(t.headers.get("content-length"));const a=r.length/32>5e5?1:1/devicePixelRatio,o=new Worker(URL.createObjectURL(new Blob(["(",createWorker.toString(),")(self,"+val+")"],{type:"application/javascript"}))),i=document.getElementById("canvas");i.width=innerWidth/a,i.height=innerHeight/a;let c=getProjectionMatrix(camera.fx/a,camera.fy/a,i.width,i.height);const l=i.getContext("webgl"),s=l.getExtension("ANGLE_instanced_arrays"),d=l.createShader(l.VERTEX_SHADER);l.shaderSource(d,vertexShaderSource),l.compileShader(d),l.getShaderParameter(d,l.COMPILE_STATUS);const f=l.createShader(l.FRAGMENT_SHADER);l.shaderSource(f,fragmentShaderSource),l.compileShader(f),l.getShaderParameter(f,l.COMPILE_STATUS);const u=l.createProgram();l.attachShader(u,d),l.attachShader(u,f),l.linkProgram(u),l.useProgram(u),l.getProgramParameter(u,l.LINK_STATUS),l.disable(l.DEPTH_TEST),l.enable(l.BLEND),l.blendFuncSeparate(l.ONE_MINUS_DST_ALPHA,l.ONE,l.ONE_MINUS_DST_ALPHA,l.ONE),l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD);const v=l.getUniformLocation(u,"projection");l.uniformMatrix4fv(v,!1,c);const m=l.getUniformLocation(u,"viewport");l.uniform2fv(m,new Float32Array([i.width,i.height]));const p=l.getUniformLocation(u,"focal");l.uniform2fv(p,new Float32Array([camera.fx/a,camera.fy/a]));const y=l.getUniformLocation(u,"view");l.uniformMatrix4fv(y,!1,viewMatrix);const A=new Float32Array([-2,-2,2,-2,2,2,-2,2]),g=l.createBuffer();l.bindBuffer(l.ARRAY_BUFFER,g),l.bufferData(l.ARRAY_BUFFER,A,l.STATIC_DRAW);const b=l.getAttribLocation(u,"position");l.enableVertexAttribArray(b),l.bindBuffer(l.ARRAY_BUFFER,g),l.vertexAttribPointer(b,2,l.FLOAT,!1,0,0);const h=l.createBuffer(),w=l.getAttribLocation(u,"center");l.enableVertexAttribArray(w),l.bindBuffer(l.ARRAY_BUFFER,h),l.vertexAttribPointer(w,3,l.FLOAT,!1,0,0),s.vertexAttribDivisorANGLE(w,1);const x=l.createBuffer(),_=l.getAttribLocation(u,"color");l.enableVertexAttribArray(_),l.bindBuffer(l.ARRAY_BUFFER,x),l.vertexAttribPointer(_,4,l.FLOAT,!1,0,0),s.vertexAttribDivisorANGLE(_,1);const E=l.createBuffer(),M=l.getAttribLocation(u,"covA");l.enableVertexAttribArray(M),l.bindBuffer(l.ARRAY_BUFFER,E),l.vertexAttribPointer(M,3,l.FLOAT,!1,0,0),s.vertexAttribDivisorANGLE(M,1);const L=l.createBuffer(),F=l.getAttribLocation(u,"covB");l.enableVertexAttribArray(F),l.bindBuffer(l.ARRAY_BUFFER,L),l.vertexAttribPointer(F,3,l.FLOAT,!1,0,0),s.vertexAttribDivisorANGLE(F,1),o.onmessage=e=>{if(e.data.buffer){r=new Uint8Array(e.data.buffer);const t=new Blob([r.buffer],{type:"application/octet-stream"}),n=document.createElement("a");n.download=fileName.replace(/\.ply$/,"")+".splat",n.href=URL.createObjectURL(t),document.body.appendChild(n),n.click(),location.reload()}};const S=e=>{let t=invert4(viewMatrix);t[13]-=0;let n=invert4(t);const a=multiply4(c,n);o.postMessage({view:a});const i=0/(r.length/32);i<100?document.getElementById("progress").style.width=i+"%":document.getElementById("progress").style.display="none",lastFrame=e,requestAnimationFrame(S)};S();const U=e=>{e.preventDefault(),e.stopPropagation()};document.addEventListener("dragenter",U),document.addEventListener("dragover",U),document.addEventListener("dragleave",U),document.addEventListener("drop",(e=>{fileName=e.dataTransfer.files[0].name,e.preventDefault(),e.stopPropagation(),(e=>{const t=new FileReader;/\.json$/i.test(e.name)?(t.onload=()=>{cameras=JSON.parse(t.result),viewMatrix=getViewMatrix(cameras[0]),c=getProjectionMatrix(camera.fx/a,camera.fy/a,i.width,i.height),l.uniformMatrix4fv(v,!1,c)},t.readAsText(e)):(P=!0,t.onload=()=>{r=new Uint8Array(t.result),112==r[0]&&108==r[1]&&121==r[2]&&10==r[3]?o.postMessage({ply:r.buffer}):o.postMessage({buffer:r.buffer,vertexCount:Math.floor(r.length/32)})},t.readAsArrayBuffer(e))})(e.dataTransfer.files[0])}));let B=0,R=-1,P=!1;for(;;){const{done:e,value:t}=await n.read();if(e||P)break;r.set(t,B),B+=t.length,0>R&&(o.postMessage({buffer:r.buffer,vertexCount:Math.floor(B/32)}),R=0)}P||o.postMessage({buffer:r.buffer,vertexCount:Math.floor(B/32)})}var slider=document.getElementById("mySlider"),output=document.getElementById("sliderValue");let overlay1=document.querySelector("#overlay1"),overlay2=document.querySelector("#overlay2");output.innerHTML=slider.value,slider.addEventListener("input",(function(){output.innerHTML=this.value,slider.addEventListener("mouseup",(function(){val=slider.value,overlay1.style.display="flex"}))})),okButton.addEventListener("click",(function(){overlay1.style.display="none",overlay2.style.display="none";var e=document.createElement("div");e.innerHTML="Please drag and drop your .ply file here to convert it",e.id="center-text",e.style.fontSize="18px",e.style.position="fixed",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",document.body.appendChild(e),main()})),cancelButton.addEventListener("click",(function(){overlay1.style.display="none"}));
