let cameras=[{id:0,img_name:"00001",width:1959,height:1090,position:[-3.0089893469241797,-.11086489695181866,-3.7527640949141428],rotation:[[.876134201218856,.06925962026449776,.47706599800804744],[-.04747421839895102,.9972110940209488,-.057586739349882114],[-.4797239414934443,.027805376500959853,.8769787916452908]],fy:1164.6601287484507,fx:1159.5880733038064}];const camera=cameras[0];let fileName;function getProjectionMatrix(e,t,r,a){const n=200;return[[2*e/r,0,0,0],[0,-2*t/a,0,0],[0,0,n/199.8,1],[0,0,-40/199.8,0]].flat()}function getViewMatrix(e){const t=e.rotation.flat(),r=e.position;return[[t[0],t[1],t[2],0],[t[3],t[4],t[5],0],[t[6],t[7],t[8],0],[-r[0]*t[0]-r[1]*t[3]-r[2]*t[6],-r[0]*t[1]-r[1]*t[4]-r[2]*t[7],-r[0]*t[2]-r[1]*t[5]-r[2]*t[8],1]].flat()}function multiply4(e,t){return[t[0]*e[0]+t[1]*e[4]+t[2]*e[8]+t[3]*e[12],t[0]*e[1]+t[1]*e[5]+t[2]*e[9]+t[3]*e[13],t[0]*e[2]+t[1]*e[6]+t[2]*e[10]+t[3]*e[14],t[0]*e[3]+t[1]*e[7]+t[2]*e[11]+t[3]*e[15],t[4]*e[0]+t[5]*e[4]+t[6]*e[8]+t[7]*e[12],t[4]*e[1]+t[5]*e[5]+t[6]*e[9]+t[7]*e[13],t[4]*e[2]+t[5]*e[6]+t[6]*e[10]+t[7]*e[14],t[4]*e[3]+t[5]*e[7]+t[6]*e[11]+t[7]*e[15],t[8]*e[0]+t[9]*e[4]+t[10]*e[8]+t[11]*e[12],t[8]*e[1]+t[9]*e[5]+t[10]*e[9]+t[11]*e[13],t[8]*e[2]+t[9]*e[6]+t[10]*e[10]+t[11]*e[14],t[8]*e[3]+t[9]*e[7]+t[10]*e[11]+t[11]*e[15],t[12]*e[0]+t[13]*e[4]+t[14]*e[8]+t[15]*e[12],t[12]*e[1]+t[13]*e[5]+t[14]*e[9]+t[15]*e[13],t[12]*e[2]+t[13]*e[6]+t[14]*e[10]+t[15]*e[14],t[12]*e[3]+t[13]*e[7]+t[14]*e[11]+t[15]*e[15]]}function invert4(e){let t=e[0]*e[5]-e[1]*e[4],r=e[0]*e[6]-e[2]*e[4],a=e[0]*e[7]-e[3]*e[4],n=e[1]*e[6]-e[2]*e[5],o=e[1]*e[7]-e[3]*e[5],i=e[2]*e[7]-e[3]*e[6],c=e[8]*e[13]-e[9]*e[12],s=e[8]*e[14]-e[10]*e[12],l=e[8]*e[15]-e[11]*e[12],f=e[9]*e[14]-e[10]*e[13],d=e[9]*e[15]-e[11]*e[13],A=e[10]*e[15]-e[11]*e[14],u=t*A-r*d+a*f+n*l-o*s+i*c;return u?[(e[5]*A-e[6]*d+e[7]*f)/u,(e[2]*d-e[1]*A-e[3]*f)/u,(e[13]*i-e[14]*o+e[15]*n)/u,(e[10]*o-e[9]*i-e[11]*n)/u,(e[6]*l-e[4]*A-e[7]*s)/u,(e[0]*A-e[2]*l+e[3]*s)/u,(e[14]*a-e[12]*i-e[15]*r)/u,(e[8]*i-e[10]*a+e[11]*r)/u,(e[4]*d-e[5]*l+e[7]*c)/u,(e[1]*l-e[0]*d-e[3]*c)/u,(e[12]*o-e[13]*a+e[15]*t)/u,(e[9]*a-e[8]*o-e[11]*t)/u,(e[5]*s-e[4]*f-e[6]*c)/u,(e[0]*f-e[1]*s+e[2]*c)/u,(e[13]*r-e[12]*n-e[14]*t)/u,(e[8]*n-e[9]*r+e[10]*t)/u]:null}function translate4(e,t,r,a){return[...e.slice(0,12),e[0]*t+e[4]*r+e[8]*a+e[12],e[1]*t+e[5]*r+e[9]*a+e[13],e[2]*t+e[6]*r+e[10]*a+e[14],e[3]*t+e[7]*r+e[11]*a+e[15]]}function createWorker(e){let t,r,a=0;let n=[],o=new Uint32Array;const i=r=>{if(!t)return;const i=new Float32Array(t),c=new Uint8Array(t),s=new Float32Array(3*a),l=new Float32Array(3*a),f=new Float32Array(3*a),d=new Float32Array(4*a);if(o.length==a){let e=n[2]*r[2]+n[6]*r[6]+n[10]*r[10];if(Math.abs(e-1)<.01)return}let A=-1/0,u=1/0,v=new Int32Array(a);for(let e=0;e<a;e++){let t=4096*(r[2]*i[8*e+0]+r[6]*i[8*e+1]+r[10]*i[8*e+2])|0;v[e]=t,t>A&&(A=t),t<u&&(u=t)}let m=65536/(A-u),p=new Uint32Array(65536);for(let e=0;e<a;e++)v[e]=(v[e]-u)*m|0,p[v[e]]++;let g=new Uint32Array(65536);for(let e=1;e<65536;e++)g[e]=g[e-1]+p[e-1];o=new Uint32Array(a);for(let e=0;e<a;e++)o[g[v[e]]++]=e;n=r;for(let e=0;e<a;e++){const t=o[e];f[3*e+0]=i[8*t+0],f[3*e+1]=i[8*t+1],f[3*e+2]=i[8*t+2],d[4*e+0]=c[32*t+24+0]/255,d[4*e+1]=c[32*t+24+1]/255,d[4*e+2]=c[32*t+24+2]/255,d[4*e+3]=c[32*t+24+3]/255;let r=[i[8*t+3+0],i[8*t+3+1],i[8*t+3+2]],a=[(c[32*t+28+0]-128)/128,(c[32*t+28+1]-128)/128,(c[32*t+28+2]-128)/128,(c[32*t+28+3]-128)/128];const n=[1-2*(a[2]*a[2]+a[3]*a[3]),2*(a[1]*a[2]+a[0]*a[3]),2*(a[1]*a[3]-a[0]*a[2]),2*(a[1]*a[2]-a[0]*a[3]),1-2*(a[1]*a[1]+a[3]*a[3]),2*(a[2]*a[3]+a[0]*a[1]),2*(a[1]*a[3]+a[0]*a[2]),2*(a[2]*a[3]-a[0]*a[1]),1-2*(a[1]*a[1]+a[2]*a[2])],A=[r[0]*n[0],r[0]*n[1],r[0]*n[2],r[1]*n[3],r[1]*n[4],r[1]*n[5],r[2]*n[6],r[2]*n[7],r[2]*n[8]];s[3*e+0]=A[0]*A[0]+A[3]*A[3]+A[6]*A[6],s[3*e+1]=A[0]*A[1]+A[3]*A[4]+A[6]*A[7],s[3*e+2]=A[0]*A[2]+A[3]*A[5]+A[6]*A[8],l[3*e+0]=A[1]*A[1]+A[4]*A[4]+A[7]*A[7],l[3*e+1]=A[1]*A[2]+A[4]*A[5]+A[7]*A[8],l[3*e+2]=A[2]*A[2]+A[5]*A[5]+A[8]*A[8]}e.postMessage({covA:s,center:f,color:d,covB:l,viewProj:r},[s.buffer,f.buffer,d.buffer,l.buffer])};const c=()=>{if(!s){s=!0;let e=r;i(e),setTimeout((()=>{s=!1,e!==r&&c()}),0)}};let s;e.onmessage=e=>{e.data.ply?(a=0,i(r),t=function(e){const t=new Uint8Array(e),r=(new TextDecoder).decode(t.slice(0,10240)),a="end_header\n",n=r.indexOf(a);if(n<0)throw new Error("Unable to read .ply file header");const o=parseInt(/element vertex (\d+)\n/.exec(r)[1]);let i=0,c={},s={};const l={double:"getFloat64",int:"getInt32",uint:"getUint32",float:"getFloat32",short:"getInt16",ushort:"getUint16",uchar:"getUint8"};for(let e of r.slice(0,n).split("\n").filter((e=>e.startsWith("property ")))){const[t,r,a]=e.split(" "),n=l[r]||"getInt8";s[a]=n,c[a]=i,i+=parseInt(n.replace(/[^\d]/g,""))/8}let f=new DataView(e,n+a.length),d=0;const A=new Proxy({},{get(e,t){if(!s[t])throw new Error(t+" not found");return f[s[t]](d*i+c[t],!0)}});let u=new Float32Array(o),v=new Uint32Array(o);for(d=0;d<o;d++){if(v[d]=d,!s.scale_0)continue;const e=Math.exp(A.scale_0)*Math.exp(A.scale_1)*Math.exp(A.scale_2),t=1/(1+Math.exp(-A.opacity));u[d]=e*t}v.sort(((e,t)=>u[t]-u[e]));const m=new ArrayBuffer(32*o);for(let e=0;e<o;e++){d=v[e];const t=new Float32Array(m,32*e,3),r=new Float32Array(m,32*e+12,3),a=new Uint8ClampedArray(m,32*e+12+12,4),n=new Uint8ClampedArray(m,32*e+12+12+4,4);if(s.scale_0){const e=Math.sqrt(A.rot_0**2+A.rot_1**2+A.rot_2**2+A.rot_3**2);n[0]=A.rot_0/e*128+128,n[1]=A.rot_1/e*128+128,n[2]=A.rot_2/e*128+128,n[3]=A.rot_3/e*128+128,r[0]=Math.exp(A.scale_0),r[1]=Math.exp(A.scale_1),r[2]=Math.exp(A.scale_2)}else r[0]=.01,r[1]=.01,r[2]=.01,n[0]=255,n[1]=0,n[2]=0,n[3]=0;if(t[0]=A.x,t[1]=A.y,t[2]=A.z,s.f_dc_0){const e=.28209479177387814;a[0]=255*(.5+e*A.f_dc_0),a[1]=255*(.5+e*A.f_dc_1),a[2]=255*(.5+e*A.f_dc_2)}else a[0]=A.red,a[1]=A.green,a[2]=A.blue;s.opacity?a[3]=1/(1+Math.exp(-A.opacity))*255:a[3]=255}return m}(e.data.ply),a=Math.floor(t.byteLength/32),postMessage({buffer:t})):e.data.buffer?(t=e.data.buffer,a=e.data.vertexCount):e.data.vertexCount?a=e.data.vertexCount:e.data.view&&(r=e.data.view,c())}}const vertexShaderSource="\n  precision mediump float;\n  attribute vec2 position;\n\n  attribute vec4 color;\n  attribute vec3 center;\n  attribute vec3 covA;\n  attribute vec3 covB;\n\n  uniform mat4 projection, view;\n  uniform vec2 focal;\n  uniform vec2 viewport;\n\n  varying vec4 vColor;\n  varying vec2 vPosition;\n\n  mat3 transpose(mat3 m) {\n    return mat3(\n        m[0][0], m[1][0], m[2][0],\n        m[0][1], m[1][1], m[2][1],\n        m[0][2], m[1][2], m[2][2]\n    );\n  }\n\n  void main () {\n    vec4 camspace = view * vec4(center, 1);\n    vec4 pos2d = projection * camspace;\n\n    float bounds = 1.2 * pos2d.w;\n    if (pos2d.z < -pos2d.w || pos2d.x < -bounds || pos2d.x > bounds\n\t\t || pos2d.y < -bounds || pos2d.y > bounds) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n    }\n\n    mat3 Vrk = mat3(\n        covA.x, covA.y, covA.z, \n        covA.y, covB.x, covB.y,\n        covA.z, covB.y, covB.z\n    );\n\t\n    mat3 J = mat3(\n        focal.x / camspace.z, 0., -(focal.x * camspace.x) / (camspace.z * camspace.z), \n        0., -focal.y / camspace.z, (focal.y * camspace.y) / (camspace.z * camspace.z), \n        0., 0., 0.\n    );\n\n    mat3 W = transpose(mat3(view));\n    mat3 T = W * J;\n    mat3 cov = transpose(T) * Vrk * T;\n    \n    vec2 vCenter = vec2(pos2d) / pos2d.w;\n\n    float diagonal1 = cov[0][0] + 0.3;\n    float offDiagonal = cov[0][1];\n    float diagonal2 = cov[1][1] + 0.3;\n\n\tfloat mid = 0.5 * (diagonal1 + diagonal2);\n\tfloat radius = length(vec2((diagonal1 - diagonal2) / 2.0, offDiagonal));\n\tfloat lambda1 = mid + radius;\n\tfloat lambda2 = max(mid - radius, 0.1);\n\tvec2 diagonalVector = normalize(vec2(offDiagonal, lambda1 - diagonal1));\n\tvec2 v1 = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n\tvec2 v2 = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n\n\n    vColor = color;\n    vPosition = position;\n\n    gl_Position = vec4(\n        vCenter \n            + position.x * v1 / viewport * 2.0 \n            + position.y * v2 / viewport * 2.0, 0.0, 1.0);\n\n  }\n",fragmentShaderSource="\nprecision mediump float;\n\n  varying vec4 vColor;\n  varying vec2 vPosition;\n\n  void main () {    \n\t  float A = -dot(vPosition, vPosition);\n    if (A < -4.0) discard;\n    float B = exp(A) * vColor.a;\n    gl_FragColor = vec4(B * vColor.rgb, B);\n  }\n";let defaultViewMatrix=[.47,.04,.88,0,-.11,.99,.02,0,-.88,-.11,.47,0,.07,.03,6.55,1],viewMatrix=defaultViewMatrix;async function main(){new URLSearchParams(location.search);try{viewMatrix=JSON.parse(decodeURIComponent(location.hash.slice(1)))}catch(e){}const e=new URL("test.splat",location.href),t=await fetch(e,{mode:"cors",credentials:"omit"});if(200!=t.status)throw new Error(t.status+" Unable to load "+t.url);const r=t.body.getReader();let a=new Uint8Array(t.headers.get("content-length"));const n=a.length/32>5e5?1:1/devicePixelRatio,o=new Worker(URL.createObjectURL(new Blob(["(",createWorker.toString(),")(self)"],{type:"application/javascript"}))),i=document.getElementById("canvas");i.width=innerWidth/n,i.height=innerHeight/n;let c=getProjectionMatrix(camera.fx/n,camera.fy/n,i.width,i.height);const s=i.getContext("webgl"),l=s.getExtension("ANGLE_instanced_arrays"),f=s.createShader(s.VERTEX_SHADER);s.shaderSource(f,vertexShaderSource),s.compileShader(f),s.getShaderParameter(f,s.COMPILE_STATUS);const d=s.createShader(s.FRAGMENT_SHADER);s.shaderSource(d,fragmentShaderSource),s.compileShader(d),s.getShaderParameter(d,s.COMPILE_STATUS);const A=s.createProgram();s.attachShader(A,f),s.attachShader(A,d),s.linkProgram(A),s.useProgram(A),s.getProgramParameter(A,s.LINK_STATUS),s.disable(s.DEPTH_TEST),s.enable(s.BLEND),s.blendFuncSeparate(s.ONE_MINUS_DST_ALPHA,s.ONE,s.ONE_MINUS_DST_ALPHA,s.ONE),s.blendEquationSeparate(s.FUNC_ADD,s.FUNC_ADD);const u=s.getUniformLocation(A,"projection");s.uniformMatrix4fv(u,!1,c);const v=s.getUniformLocation(A,"viewport");s.uniform2fv(v,new Float32Array([i.width,i.height]));const m=s.getUniformLocation(A,"focal");s.uniform2fv(m,new Float32Array([camera.fx/n,camera.fy/n]));const p=s.getUniformLocation(A,"view");s.uniformMatrix4fv(p,!1,viewMatrix);const g=new Float32Array([-2,-2,2,-2,2,2,-2,2]),b=s.createBuffer();s.bindBuffer(s.ARRAY_BUFFER,b),s.bufferData(s.ARRAY_BUFFER,g,s.STATIC_DRAW);const y=s.getAttribLocation(A,"position");s.enableVertexAttribArray(y),s.bindBuffer(s.ARRAY_BUFFER,b),s.vertexAttribPointer(y,2,s.FLOAT,!1,0,0);const h=s.createBuffer(),w=s.getAttribLocation(A,"center");s.enableVertexAttribArray(w),s.bindBuffer(s.ARRAY_BUFFER,h),s.vertexAttribPointer(w,3,s.FLOAT,!1,0,0),l.vertexAttribDivisorANGLE(w,1);const x=s.createBuffer(),_=s.getAttribLocation(A,"color");s.enableVertexAttribArray(_),s.bindBuffer(s.ARRAY_BUFFER,x),s.vertexAttribPointer(_,4,s.FLOAT,!1,0,0),l.vertexAttribDivisorANGLE(_,1);const R=s.createBuffer(),F=s.getAttribLocation(A,"covA");s.enableVertexAttribArray(F),s.bindBuffer(s.ARRAY_BUFFER,R),s.vertexAttribPointer(F,3,s.FLOAT,!1,0,0),l.vertexAttribDivisorANGLE(F,1);const B=s.createBuffer(),E=s.getAttribLocation(A,"covB");s.enableVertexAttribArray(E),s.bindBuffer(s.ARRAY_BUFFER,B),s.vertexAttribPointer(E,3,s.FLOAT,!1,0,0),l.vertexAttribDivisorANGLE(E,1);let U,M=[];o.onmessage=e=>{if(e.data.buffer){a=new Uint8Array(e.data.buffer);const t=new Blob([a.buffer],{type:"application/octet-stream"}),r=document.createElement("a");r.download=fileName.replace(/\.ply$/,"")+".splat",r.href=URL.createObjectURL(t),document.body.appendChild(r),r.click()}else{let{covA:t,covB:r,center:a,color:n,viewProj:o}=e.data;U=e.data,M=o,L=a.length/3,s.bindBuffer(s.ARRAY_BUFFER,h),s.bufferData(s.ARRAY_BUFFER,a,s.DYNAMIC_DRAW),s.bindBuffer(s.ARRAY_BUFFER,x),s.bufferData(s.ARRAY_BUFFER,n,s.DYNAMIC_DRAW),s.bindBuffer(s.ARRAY_BUFFER,R),s.bufferData(s.ARRAY_BUFFER,t,s.DYNAMIC_DRAW),s.bindBuffer(s.ARRAY_BUFFER,B),s.bufferData(s.ARRAY_BUFFER,r,s.DYNAMIC_DRAW)}};let L=0;const S=e=>{let t=invert4(viewMatrix);t[13]-=0;let r=invert4(t);const n=multiply4(c,r);o.postMessage({view:n}),L>0?(document.getElementById("spinner").style.display="none",s.uniformMatrix4fv(p,!1,r),l.drawArraysInstancedANGLE(s.TRIANGLE_FAN,0,4,L)):(s.clear(s.COLOR_BUFFER_BIT),document.getElementById("spinner").style.display="",start=Date.now()+2e3);const i=100*L/(a.length/32);i<100?document.getElementById("progress").style.width=i+"%":document.getElementById("progress").style.display="none",lastFrame=e,requestAnimationFrame(S)};S();const D=e=>{e.preventDefault(),e.stopPropagation()};document.addEventListener("dragenter",D),document.addEventListener("dragover",D),document.addEventListener("dragleave",D),document.addEventListener("drop",(e=>{fileName=e.dataTransfer.files[0].name,e.preventDefault(),e.stopPropagation(),(e=>{const t=new FileReader;/\.json$/i.test(e.name)?(t.onload=()=>{cameras=JSON.parse(t.result),viewMatrix=getViewMatrix(cameras[0]),c=getProjectionMatrix(camera.fx/n,camera.fy/n,i.width,i.height),s.uniformMatrix4fv(u,!1,c)},t.readAsText(e)):(C=!0,t.onload=()=>{a=new Uint8Array(t.result),112==a[0]&&108==a[1]&&121==a[2]&&10==a[3]?o.postMessage({ply:a.buffer}):o.postMessage({buffer:a.buffer,vertexCount:Math.floor(a.length/32)})},t.readAsArrayBuffer(e))})(e.dataTransfer.files[0])}));let P=0,T=-1,C=!1;for(;;){const{done:e,value:t}=await r.read();if(e||C)break;a.set(t,P),P+=t.length,L>T&&(o.postMessage({buffer:a.buffer,vertexCount:Math.floor(P/32)}),T=L)}C||o.postMessage({buffer:a.buffer,vertexCount:Math.floor(P/32)})}main().catch((()=>{}));